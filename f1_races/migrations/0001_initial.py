# Generated by Django 5.2.6 on 2025-09-17 00:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='constructors',
            fields=[
                ('constructorsID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('fullName', models.CharField(max_length=100)),
                ('bestChampionshipPosition', models.IntegerField()),
                ('bestStartingGridPosition', models.IntegerField()),
                ('bestRaceResult', models.IntegerField()),
                ('totalChampionshipWins', models.IntegerField()),
                ('totalRaceEntries', models.IntegerField()),
                ('totalRaceStarts', models.IntegerField()),
                ('totalRaceWins', models.IntegerField()),
                ('total1And2Finishes', models.IntegerField()),
                ('totalRaceLaps', models.IntegerField()),
                ('totalPodiums', models.IntegerField()),
                ('totalPodiumRaces', models.IntegerField()),
                ('totalPoints', models.FloatField()),
                ('totalChampionshipPoints', models.FloatField()),
                ('totalPolePositions', models.IntegerField()),
                ('totalFastestLaps', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Constructor',
            },
        ),
        migrations.CreateModel(
            name='continents',
            fields=[
                ('continentsID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=2)),
                ('name', models.CharField(max_length=15)),
                ('demonym', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Continent',
            },
        ),
        migrations.CreateModel(
            name='entrants',
            fields=[
                ('entrantsID', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Entrant',
            },
        ),
        migrations.CreateModel(
            name='sessions',
            fields=[
                ('year', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Session',
            },
        ),
        migrations.CreateModel(
            name='chassis',
            fields=[
                ('chassisID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('fullName', models.CharField(max_length=100)),
                ('constructorsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chassis_constructorsID', to='f1_races.constructors')),
            ],
            options={
                'verbose_name': 'Chassis',
            },
        ),
        migrations.CreateModel(
            name='constructors_chronology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positionDisplayOrder', models.IntegerField()),
                ('yearFrom', models.IntegerField()),
                ('yearTo', models.IntegerField()),
                ('constructorID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='constructorID', to='f1_races.constructors')),
                ('parentConstructorID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parentConstructorID', to='f1_races.constructors')),
            ],
            options={
                'verbose_name': 'Constructors Chronology',
            },
        ),
        migrations.CreateModel(
            name='countries',
            fields=[
                ('countriesID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('alpha2Code', models.CharField(max_length=2)),
                ('alpha3Code', models.CharField(max_length=3)),
                ('iocCode', models.CharField(max_length=3)),
                ('name', models.CharField(max_length=50)),
                ('demonym', models.CharField(max_length=50)),
                ('continentID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='countries_continentID', to='f1_races.continents')),
            ],
        ),
        migrations.AddField(
            model_name='constructors',
            name='countriesID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='constructors_countriesID', to='f1_races.countries'),
        ),
        migrations.CreateModel(
            name='circuits',
            fields=[
                ('circuitsID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('fullName', models.CharField(max_length=100)),
                ('previousNames', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=10)),
                ('direction', models.CharField(max_length=20)),
                ('placeName', models.CharField(max_length=100)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('length', models.FloatField()),
                ('turns', models.IntegerField()),
                ('totalRacesHeld', models.IntegerField()),
                ('countriesID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='circuits_countriesID', to='f1_races.countries')),
            ],
            options={
                'verbose_name': 'Circuit',
            },
        ),
        migrations.CreateModel(
            name='drivers',
            fields=[
                ('driversID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('firstName', models.CharField(max_length=100)),
                ('lastName', models.CharField(max_length=100)),
                ('fullName', models.CharField(max_length=100)),
                ('abbreviation', models.CharField(max_length=10)),
                ('permanentNumber', models.IntegerField()),
                ('gender', models.CharField(max_length=10)),
                ('dateOfBirth', models.DateField()),
                ('dateOfDeath', models.DateField(blank=True, null=True)),
                ('placeOfBirth', models.CharField(max_length=100)),
                ('bestChampionshipPosition', models.IntegerField()),
                ('bestStartingGridPosition', models.IntegerField()),
                ('bestRaceResult', models.IntegerField()),
                ('totalChampionshipWins', models.IntegerField()),
                ('totalRaceEntries', models.IntegerField()),
                ('totalRaceStarts', models.IntegerField()),
                ('totalRaceWins', models.IntegerField()),
                ('totalRaceLaps', models.IntegerField()),
                ('totalPodiums', models.IntegerField()),
                ('totalPoints', models.FloatField()),
                ('totalChampionshipPoints', models.FloatField()),
                ('totalPolePositions', models.IntegerField()),
                ('totalFastestLaps', models.IntegerField()),
                ('totalDriverOfTheDay', models.IntegerField()),
                ('totalGrandSlams', models.IntegerField()),
                ('countryOfBirthID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drivers_country_of_birth', to='f1_races.countries')),
                ('nationalityCountryID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drivers_nationality', to='f1_races.countries')),
                ('secondNationalityCountryID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drivers_second_nationality', to='f1_races.countries')),
            ],
            options={
                'verbose_name': 'Driver',
            },
        ),
        migrations.CreateModel(
            name='drivers_family_relations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positionDisplayOrder', models.IntegerField()),
                ('type', models.CharField(max_length=50)),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driverID', to='f1_races.drivers')),
                ('parentDriverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parentDriverID', to='f1_races.drivers')),
            ],
            options={
                'verbose_name': 'Drivers Family Relations',
            },
        ),
        migrations.CreateModel(
            name='enginesManufacturers',
            fields=[
                ('enginesManufacturersID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('fullName', models.CharField(max_length=100)),
                ('bestChampionshipPosition', models.IntegerField()),
                ('bestStartingGridPosition', models.IntegerField()),
                ('bestRaceResult', models.IntegerField()),
                ('totalChampionshipWins', models.IntegerField()),
                ('totalRaceEntries', models.IntegerField()),
                ('totalRaceStarts', models.IntegerField()),
                ('totalRaceWins', models.IntegerField()),
                ('total1And2Finishes', models.IntegerField()),
                ('totalRaceLaps', models.IntegerField()),
                ('totalPodiums', models.IntegerField()),
                ('totalPodiumRaces', models.IntegerField()),
                ('totalPoints', models.FloatField()),
                ('totalChampionshipPoints', models.FloatField()),
                ('totalPolePositions', models.IntegerField()),
                ('totalFastestLaps', models.IntegerField()),
                ('countriesID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engines_manufacturers_countriesID', to='f1_races.countries')),
            ],
            options={
                'verbose_name': 'Engine Manufacturer',
            },
        ),
        migrations.CreateModel(
            name='engines',
            fields=[
                ('enginesID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('fullName', models.CharField(max_length=100)),
                ('capacity', models.IntegerField()),
                ('configuration', models.CharField(max_length=100)),
                ('aspiration', models.CharField(max_length=100)),
                ('enginesManufacturersID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engines_enginesManufacturersID', to='f1_races.enginesmanufacturers')),
            ],
            options={
                'verbose_name': 'Engine',
            },
        ),
        migrations.CreateModel(
            name='grandPrix',
            fields=[
                ('grandPrixID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('fullName', models.CharField(max_length=100)),
                ('shortName', models.CharField(max_length=100)),
                ('abbreviation', models.CharField(max_length=10)),
                ('totalRacesHeld', models.IntegerField()),
                ('countriesID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grand_prix_countriesID', to='f1_races.countries')),
            ],
            options={
                'verbose_name': 'Grand Prix',
            },
        ),
        migrations.CreateModel(
            name='races',
            fields=[
                ('racesID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('round', models.IntegerField()),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('officialName', models.CharField(max_length=100)),
                ('qualifyingFormat', models.CharField(max_length=100)),
                ('sprintQualifyingFormat', models.CharField(max_length=100)),
                ('direction', models.CharField(max_length=100)),
                ('courseLength', models.FloatField()),
                ('turns', models.IntegerField()),
                ('laps', models.IntegerField()),
                ('distance', models.FloatField()),
                ('scheduledLaps', models.IntegerField()),
                ('scheduledDistance', models.FloatField()),
                ('driversChampionshipDecider', models.BooleanField(default=False)),
                ('constructorsChampionshipDecider', models.BooleanField(default=False)),
                ('preQualifyingDate', models.DateField(blank=True, null=True)),
                ('preQualifyingTime', models.TimeField(blank=True, null=True)),
                ('freePractice1Date', models.DateField(blank=True, null=True)),
                ('freePractice1Time', models.TimeField(blank=True, null=True)),
                ('freePractice2Date', models.DateField(blank=True, null=True)),
                ('freePractice2Time', models.TimeField(blank=True, null=True)),
                ('freePractice3Date', models.DateField(blank=True, null=True)),
                ('freePractice3Time', models.TimeField(blank=True, null=True)),
                ('freePractice4Date', models.DateField(blank=True, null=True)),
                ('freePractice4Time', models.TimeField(blank=True, null=True)),
                ('qualifying1Date', models.DateField(blank=True, null=True)),
                ('qualifying1Time', models.TimeField(blank=True, null=True)),
                ('qualifying2Date', models.DateField(blank=True, null=True)),
                ('qualifying2Time', models.TimeField(blank=True, null=True)),
                ('qualifyingDate', models.DateField(blank=True, null=True)),
                ('qualifyingTime', models.TimeField(blank=True, null=True)),
                ('sprintQualifyingDate', models.DateField(blank=True, null=True)),
                ('sprintQualifyingTime', models.TimeField(blank=True, null=True)),
                ('sprintRaceDate', models.DateField(blank=True, null=True)),
                ('sprintRaceTime', models.TimeField(blank=True, null=True)),
                ('warmingUpDate', models.DateField(blank=True, null=True)),
                ('warmingUpTime', models.TimeField(blank=True, null=True)),
                ('circuitsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_circuitsID', to='f1_races.circuits')),
                ('grandPrixID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_grandPrixID', to='f1_races.grandprix')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_year', to='f1_races.sessions')),
            ],
            options={
                'verbose_name': 'Race',
            },
        ),
        migrations.CreateModel(
            name='races_driver_standings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('points', models.FloatField()),
                ('positionsGained', models.IntegerField()),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_driver_standings_driverID', to='f1_races.drivers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_driver_standings', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_driver_standings', to='f1_races.sessions')),
            ],
            options={
                'verbose_name': 'Races Driver Standings',
            },
        ),
        migrations.CreateModel(
            name='races_driver_of_the_day_results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('points', models.FloatField()),
                ('positionsGained', models.FloatField()),
                ('constructorID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_driver_of_the_day_results_constructorID', to='f1_races.constructors')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_driver_of_the_day_results_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_driver_of_the_day_results', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_driver_of_the_day_results', to='f1_races.sessions')),
            ],
            options={
                'verbose_name': 'Races Driver of the Day Results',
            },
        ),
        migrations.CreateModel(
            name='races_constructors_standings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('points', models.FloatField()),
                ('positionsGained', models.IntegerField()),
                ('constructorID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_constructors_standings_constructorID', to='f1_races.constructors')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_constructors_standings_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_constructors_standings', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_constructors_standings', to='f1_races.sessions')),
            ],
        ),
        migrations.CreateModel(
            name='races_constructors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('points', models.IntegerField()),
                ('positionsGained', models.IntegerField()),
                ('constructorID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_constructors_constructorID', to='f1_races.constructors')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_constructors_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_constructors', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_constructors', to='f1_races.sessions')),
            ],
            options={
                'verbose_name': 'Races Constructors',
            },
        ),
        migrations.CreateModel(
            name='sessions_constructors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('bestStartingGridPosition', models.IntegerField()),
                ('bestRaceResult', models.IntegerField()),
                ('totalRaceEntries', models.IntegerField()),
                ('totalRaceWins', models.IntegerField()),
                ('total1And2Finishes', models.IntegerField()),
                ('totalRacesLaps', models.IntegerField()),
                ('totalPodiums', models.IntegerField()),
                ('totalPodiumRaces', models.IntegerField()),
                ('totalPoints', models.FloatField()),
                ('totalPolePositions', models.IntegerField()),
                ('totalFastestLaps', models.IntegerField()),
                ('constructorID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_constructors_constructorID', to='f1_races.constructors')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_sessions_constructors', to='f1_races.sessions')),
            ],
            options={
                'verbose_name': 'Sessions Constructors',
            },
        ),
        migrations.CreateModel(
            name='sessions_constructors_standings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('points', models.FloatField()),
                ('constructorID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_constructors_standings_constructorID', to='f1_races.constructors')),
                ('enginesManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_constructors_standings_enginesManufacturerID', to='f1_races.enginesmanufacturers')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_sessions_constructors_standings', to='f1_races.sessions')),
            ],
            options={
                'verbose_name': 'Sessions Constructors Standings',
            },
        ),
        migrations.CreateModel(
            name='sessions_drivers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('bestStartingGridPosition', models.IntegerField()),
                ('bestRaceResult', models.IntegerField()),
                ('totalRaceEntries', models.IntegerField()),
                ('totalRaceStarts', models.IntegerField()),
                ('totalRaceWins', models.IntegerField()),
                ('totalRaceLaps', models.IntegerField()),
                ('totalPodiums', models.IntegerField()),
                ('totalPoints', models.FloatField()),
                ('totalPolePositions', models.IntegerField()),
                ('totalFastestLaps', models.IntegerField()),
                ('totalDriverOfTheDay', models.IntegerField()),
                ('totalGrandSlams', models.IntegerField()),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_drivers_driverID', to='f1_races.drivers')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_sessions_drivers', to='f1_races.sessions')),
            ],
            options={
                'verbose_name': 'Sessions Drivers',
            },
        ),
        migrations.CreateModel(
            name='sessions_drivers_standings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('points', models.FloatField()),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_drivers_standings_driverID', to='f1_races.drivers')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_sessions_drivers_standings', to='f1_races.sessions')),
            ],
            options={
                'verbose_name': 'Sessions Drivers Standings',
            },
        ),
        migrations.CreateModel(
            name='sessions_engines_manufacturers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('bestStartingGridPosition', models.IntegerField()),
                ('bestRaceResult', models.IntegerField()),
                ('totalRaceEntries', models.IntegerField()),
                ('totalRaceWins', models.IntegerField()),
                ('totalRaceLaps', models.IntegerField()),
                ('totalPodiums', models.IntegerField()),
                ('totalPodiumRaces', models.IntegerField()),
                ('totalPoints', models.FloatField()),
                ('totalPolePositions', models.IntegerField()),
                ('totalFastestLaps', models.IntegerField()),
                ('enginesManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_engines_manufacturers_enginesManufacturerID', to='f1_races.enginesmanufacturers')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_sessions_engines_manufacturers', to='f1_races.sessions')),
            ],
            options={
                'verbose_name': 'Sessions Engines Manufacturers',
            },
        ),
        migrations.CreateModel(
            name='sessions_entrants_chassis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chassisID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_chassis_chassisID', to='f1_races.chassis')),
                ('constructorID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_chassis_constructorID', to='f1_races.constructors')),
                ('enginesManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_chassis_enginesManufacturerID', to='f1_races.enginesmanufacturers')),
                ('entrantID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_chassis_entrantID', to='f1_races.entrants')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_sessions_entrants_chassis', to='f1_races.sessions')),
            ],
            options={
                'verbose_name': 'Sessions Entrants Chassis',
            },
        ),
        migrations.CreateModel(
            name='sessions_entrants_constructors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('constructorID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_constructors_constructorID', to='f1_races.constructors')),
                ('enginesManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_constructors_enginesManufacturerID', to='f1_races.enginesmanufacturers')),
                ('entrantID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_constructors_entrantID', to='f1_races.entrants')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_sessions_entrants_constructors', to='f1_races.sessions')),
            ],
            options={
                'verbose_name': 'Sessions Entrants Constructors',
            },
        ),
        migrations.CreateModel(
            name='sessions_entrants_drivers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rounds', models.IntegerField()),
                ('roundsText', models.CharField(max_length=100)),
                ('testDriver', models.BooleanField(default=False)),
                ('constructorID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_drivers_constructorID', to='f1_races.constructors')),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_drivers_driverID', to='f1_races.drivers')),
                ('enginesManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_drivers_enginesManufacturerID', to='f1_races.enginesmanufacturers')),
                ('entrantID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_drivers_entrantID', to='f1_races.entrants')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_sessions_entrants_drivers', to='f1_races.sessions')),
            ],
            options={
                'verbose_name': 'Sessions Entrants Drivers',
            },
        ),
        migrations.CreateModel(
            name='sessions_entrants_engines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engineID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_engines_engineID', to='f1_races.engines')),
                ('enginesManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_engines_enginesManufacturerID', to='f1_races.enginesmanufacturers')),
                ('entrantID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_engines_entrantID', to='f1_races.entrants')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_sessions_entrants_engines', to='f1_races.sessions')),
            ],
            options={
                'verbose_name': 'Sessions Entrants Engines',
            },
        ),
        migrations.CreateModel(
            name='tyreManufacturers',
            fields=[
                ('tyreManufacturersID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('bestStartingGridPosition', models.IntegerField()),
                ('bestRaceResult', models.IntegerField()),
                ('totalRaceEntries', models.IntegerField()),
                ('totalRaceStarts', models.IntegerField()),
                ('totalRaceWins', models.IntegerField()),
                ('totalRaceLaps', models.IntegerField()),
                ('totalPodiums', models.IntegerField()),
                ('totalPodiumRaces', models.IntegerField()),
                ('totalPolePositions', models.IntegerField()),
                ('totalFastestLaps', models.IntegerField()),
                ('countriesID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tyre_manufacturers_countriesID', to='f1_races.countries')),
            ],
            options={
                'verbose_name': 'Tyre Manufacturer',
            },
        ),
        migrations.CreateModel(
            name='sessions_tyre_manufacturers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bestStartingGridPosition', models.IntegerField()),
                ('bestRaceResult', models.IntegerField()),
                ('totalRaceEntries', models.IntegerField()),
                ('totalRaceWins', models.IntegerField()),
                ('totalRacesStarts', models.IntegerField()),
                ('totalRaceLaps', models.IntegerField()),
                ('totalPodiums', models.IntegerField()),
                ('totalPodiumRaces', models.IntegerField()),
                ('totalPolePositions', models.IntegerField()),
                ('totalFastestLaps', models.IntegerField()),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_sessions_tyre_manufacturers', to='f1_races.sessions')),
                ('tyreManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_tyre_manufacturers_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Sessions Tyre Manufacturers',
            },
        ),
        migrations.CreateModel(
            name='sessions_entrants_tyres_manufacturers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('constructorID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_tyres_manufacturers_constructorID', to='f1_races.constructors')),
                ('enginesManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_tyres_manufacturers_enginesManufacturerID', to='f1_races.enginesmanufacturers')),
                ('entrantID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_tyres_manufacturers_entrantID', to='f1_races.entrants')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_sessions_entrants_tyres_manufacturers', to='f1_races.sessions')),
                ('tyreManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_entrants_tyres_manufacturers_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Sessions Entrants Tyres Manufacturers',
            },
        ),
        migrations.CreateModel(
            name='races_warming_up_results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('driverNumber', models.IntegerField()),
                ('time', models.DurationField()),
                ('timeMillis', models.IntegerField()),
                ('timePenalty', models.DurationField(blank=True, null=True)),
                ('timePenaltyMillis', models.IntegerField(blank=True, null=True)),
                ('gap', models.DurationField(blank=True, null=True)),
                ('gapMillis', models.IntegerField(blank=True, null=True)),
                ('gapLaps', models.IntegerField(blank=True, null=True)),
                ('interval', models.DurationField(blank=True, null=True)),
                ('intervalMillis', models.IntegerField(blank=True, null=True)),
                ('laps', models.IntegerField()),
                ('constructorsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_warming_up_results_constructorsID', to='f1_races.constructors')),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_warming_up_results_driverID', to='f1_races.drivers')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_warming_up_results_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_warming_up_results', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_warming_up_results', to='f1_races.sessions')),
                ('tyreManufacturersID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_warming_up_results_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Races Warming Up Results',
            },
        ),
        migrations.CreateModel(
            name='races_starting_grid_positions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('driverNumber', models.IntegerField()),
                ('qualificationPositionNumber', models.IntegerField(blank=True, null=True)),
                ('qualificationPositionText', models.CharField(blank=True, max_length=100, null=True)),
                ('gridPenalty', models.IntegerField()),
                ('gridPenaltyPositions', models.IntegerField()),
                ('time', models.DurationField()),
                ('timeMillis', models.IntegerField()),
                ('constructorsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_starting_grid_positions_constructorsID', to='f1_races.constructors')),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_starting_grid_positions_driverID', to='f1_races.drivers')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_starting_grid_positions_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_starting_grid_positions', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_starting_grid_positions', to='f1_races.sessions')),
                ('tyreManufacturersID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_starting_grid_positions_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Races Starting Grid Positions',
            },
        ),
        migrations.CreateModel(
            name='races_sprint_starting_grid_positions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('driverNumber', models.IntegerField()),
                ('qualificationPositionNumber', models.IntegerField(blank=True, null=True)),
                ('qualificationPositionText', models.CharField(blank=True, max_length=100, null=True)),
                ('gridPenalty', models.IntegerField()),
                ('gridPenaltyPositions', models.IntegerField()),
                ('time', models.DurationField()),
                ('timeMillis', models.IntegerField()),
                ('constructorsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_sprint_starting_grid_positions_constructorsID', to='f1_races.constructors')),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_sprint_starting_grid_positions_driverID', to='f1_races.drivers')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_sprint_starting_grid_positions_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_sprint_starting_grid_positions', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_sprint_starting_grid_positions', to='f1_races.sessions')),
                ('tyreManufacturersID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_sprint_starting_grid_positions_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Races Sprint Starting Grid Positions',
            },
        ),
        migrations.CreateModel(
            name='races_sprint_race_results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('driverNumber', models.IntegerField()),
                ('sharedCar', models.BooleanField(default=False)),
                ('laps', models.IntegerField()),
                ('time', models.DurationField()),
                ('timeMillis', models.IntegerField()),
                ('timePenalty', models.DurationField(blank=True, null=True)),
                ('timePenaltyMillis', models.IntegerField(blank=True, null=True)),
                ('gap', models.DurationField(blank=True, null=True)),
                ('gapMillis', models.IntegerField(blank=True, null=True)),
                ('gapLaps', models.IntegerField(blank=True, null=True)),
                ('interval', models.DurationField(blank=True, null=True)),
                ('intervalMillis', models.IntegerField(blank=True, null=True)),
                ('reasonRetired', models.CharField(blank=True, max_length=100, null=True)),
                ('points', models.FloatField(blank=True, null=True)),
                ('polePosition', models.BooleanField(default=False)),
                ('qualificationPositionNumber', models.IntegerField(blank=True, null=True)),
                ('qualificationPositionText', models.CharField(blank=True, max_length=100, null=True)),
                ('gridPositionNumber', models.IntegerField(blank=True, null=True)),
                ('gridPositionText', models.CharField(blank=True, max_length=100, null=True)),
                ('positionGained', models.IntegerField(blank=True, null=True)),
                ('pitStops', models.IntegerField(blank=True, null=True)),
                ('fastestLap', models.BooleanField(default=False)),
                ('driverOfTheDay', models.BooleanField(default=False)),
                ('grandSlam', models.BooleanField(default=False)),
                ('constructorsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_sprint_race_results_constructorsID', to='f1_races.constructors')),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_sprint_race_results_driverID', to='f1_races.drivers')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_sprint_race_results_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_sprint_race_results', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_sprint_race_results', to='f1_races.sessions')),
                ('tyreManufacturersID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_sprint_race_results_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Races Sprint Race Results',
            },
        ),
        migrations.CreateModel(
            name='races_sprint_qualifying',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('driverNumber', models.IntegerField()),
                ('time', models.DurationField()),
                ('timeMillis', models.IntegerField()),
                ('q1', models.DurationField(blank=True, null=True)),
                ('q1Millis', models.IntegerField(blank=True, null=True)),
                ('q2', models.DurationField(blank=True, null=True)),
                ('q2Millis', models.IntegerField(blank=True, null=True)),
                ('q3', models.DurationField(blank=True, null=True)),
                ('q3Millis', models.IntegerField(blank=True, null=True)),
                ('gap', models.DurationField(blank=True, null=True)),
                ('gapMillis', models.IntegerField(blank=True, null=True)),
                ('interval', models.DurationField(blank=True, null=True)),
                ('intervalMillis', models.IntegerField(blank=True, null=True)),
                ('laps', models.IntegerField()),
                ('constructorsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_sprint_qualifying_constructorsID', to='f1_races.constructors')),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_sprint_qualifying_driverID', to='f1_races.drivers')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_sprint_qualifying_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_sprint_qualifying', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_sprint_qualifying', to='f1_races.sessions')),
                ('tyreManufacturersID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_sprint_qualifying_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Races Sprint Qualifying',
            },
        ),
        migrations.CreateModel(
            name='races_race_results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('driverNumber', models.IntegerField()),
                ('sharedCar', models.BooleanField(default=False)),
                ('laps', models.IntegerField()),
                ('time', models.DurationField()),
                ('timeMillis', models.IntegerField()),
                ('timePenalty', models.DurationField(blank=True, null=True)),
                ('timePenaltyMillis', models.IntegerField(blank=True, null=True)),
                ('gap', models.DurationField(blank=True, null=True)),
                ('gapMillis', models.IntegerField(blank=True, null=True)),
                ('gapLaps', models.IntegerField(blank=True, null=True)),
                ('interval', models.DurationField(blank=True, null=True)),
                ('intervalMillis', models.IntegerField(blank=True, null=True)),
                ('reasonRetired', models.CharField(blank=True, max_length=100, null=True)),
                ('points', models.FloatField(blank=True, null=True)),
                ('polePosition', models.BooleanField(default=False)),
                ('qualificationPositionNumber', models.IntegerField(blank=True, null=True)),
                ('qualificationPositionText', models.CharField(blank=True, max_length=100, null=True)),
                ('gridPositionNumber', models.IntegerField(blank=True, null=True)),
                ('gridPositionText', models.CharField(blank=True, max_length=100, null=True)),
                ('positionGained', models.IntegerField(blank=True, null=True)),
                ('pitStops', models.IntegerField(blank=True, null=True)),
                ('fastestLap', models.BooleanField(default=False)),
                ('driverOfTheDay', models.BooleanField(default=False)),
                ('grandSlam', models.BooleanField(default=False)),
                ('constructorsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_race_results_constructorsID', to='f1_races.constructors')),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_race_results_driverID', to='f1_races.drivers')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_race_results_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_race_results', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_race_results', to='f1_races.sessions')),
                ('tyreManufacturersID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_race_results_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Races Race Results',
            },
        ),
        migrations.CreateModel(
            name='races_qualifying_results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('driverNumber', models.IntegerField()),
                ('time', models.DurationField()),
                ('timeMillis', models.IntegerField()),
                ('q1', models.DurationField(blank=True, null=True)),
                ('q1Millis', models.IntegerField(blank=True, null=True)),
                ('q2', models.DurationField(blank=True, null=True)),
                ('q2Millis', models.IntegerField(blank=True, null=True)),
                ('q3', models.DurationField(blank=True, null=True)),
                ('q3Millis', models.IntegerField(blank=True, null=True)),
                ('gap', models.DurationField(blank=True, null=True)),
                ('gapMillis', models.IntegerField(blank=True, null=True)),
                ('interval', models.DurationField(blank=True, null=True)),
                ('intervalMillis', models.IntegerField(blank=True, null=True)),
                ('laps', models.IntegerField()),
                ('constructorsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_qualifying_results_constructorsID', to='f1_races.constructors')),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_qualifying_results_driverID', to='f1_races.drivers')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_qualifying_results_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_qualifying_results', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_qualifying_results', to='f1_races.sessions')),
                ('tyreManufacturersID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_qualifying_results_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Races Qualifying Results',
            },
        ),
        migrations.CreateModel(
            name='races_qualifying2_results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('driverNumber', models.IntegerField()),
                ('time', models.DurationField()),
                ('timeMillis', models.IntegerField()),
                ('q1', models.DurationField(blank=True, null=True)),
                ('q1Millis', models.IntegerField(blank=True, null=True)),
                ('q2', models.DurationField(blank=True, null=True)),
                ('q2Millis', models.IntegerField(blank=True, null=True)),
                ('q3', models.DurationField(blank=True, null=True)),
                ('q3Millis', models.IntegerField(blank=True, null=True)),
                ('gap', models.DurationField(blank=True, null=True)),
                ('gapMillis', models.IntegerField(blank=True, null=True)),
                ('interval', models.DurationField(blank=True, null=True)),
                ('intervalMillis', models.IntegerField(blank=True, null=True)),
                ('laps', models.IntegerField()),
                ('constructorsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_qualifying2_results_constructorsID', to='f1_races.constructors')),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_qualifying2_results_driverID', to='f1_races.drivers')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_qualifying2_results_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_qualifying2_results', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_qualifying2_results', to='f1_races.sessions')),
                ('tyreManufacturersID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_qualifying2_results_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Races Qualifying 2 Results',
            },
        ),
        migrations.CreateModel(
            name='races_qualifying1_results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('driverNumber', models.IntegerField()),
                ('time', models.DurationField()),
                ('timeMillis', models.IntegerField()),
                ('q1', models.DurationField(blank=True, null=True)),
                ('q1Millis', models.IntegerField(blank=True, null=True)),
                ('q2', models.DurationField(blank=True, null=True)),
                ('q2Millis', models.IntegerField(blank=True, null=True)),
                ('q3', models.DurationField(blank=True, null=True)),
                ('q3Millis', models.IntegerField(blank=True, null=True)),
                ('gap', models.DurationField(blank=True, null=True)),
                ('gapMillis', models.IntegerField(blank=True, null=True)),
                ('interval', models.DurationField(blank=True, null=True)),
                ('intervalMillis', models.IntegerField(blank=True, null=True)),
                ('laps', models.IntegerField()),
                ('constructorsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_qualifying1_results_constructorsID', to='f1_races.constructors')),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_qualifying1_results_driverID', to='f1_races.drivers')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_qualifying1_results_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_qualifying1_results', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_qualifying1_results', to='f1_races.sessions')),
                ('tyreManufacturersID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_qualifying1_results_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Races Qualifying 1 Results',
            },
        ),
        migrations.CreateModel(
            name='races_pre_qualifying_results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('driverNumber', models.IntegerField()),
                ('time', models.DurationField()),
                ('timeMillis', models.IntegerField()),
                ('q1', models.DurationField(blank=True, null=True)),
                ('q1Millis', models.IntegerField(blank=True, null=True)),
                ('q2', models.DurationField(blank=True, null=True)),
                ('q2Millis', models.IntegerField(blank=True, null=True)),
                ('q3', models.DurationField(blank=True, null=True)),
                ('q3Millis', models.IntegerField(blank=True, null=True)),
                ('gap', models.DurationField(blank=True, null=True)),
                ('gapMillis', models.IntegerField(blank=True, null=True)),
                ('interval', models.DurationField(blank=True, null=True)),
                ('intervalMillis', models.IntegerField(blank=True, null=True)),
                ('laps', models.IntegerField()),
                ('constructorsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_pre_qualifying_results_constructorsID', to='f1_races.constructors')),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_pre_qualifying_results_driverID', to='f1_races.drivers')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_pre_qualifying_results_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_pre_qualifying_results', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_pre_qualifying_results', to='f1_races.sessions')),
                ('tyreManufacturersID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_pre_qualifying_results_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Races Pre Qualifying Results',
            },
        ),
        migrations.CreateModel(
            name='races_pit_stops',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('driverNumber', models.IntegerField()),
                ('stop', models.IntegerField()),
                ('lap', models.IntegerField()),
                ('time', models.DurationField()),
                ('timeMillis', models.IntegerField()),
                ('constructorsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_pit_stops_constructorsID', to='f1_races.constructors')),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_pit_stops_driverID', to='f1_races.drivers')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_pit_stops_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_pit_stops', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_pit_stops', to='f1_races.sessions')),
                ('tyreManufacturersID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_pit_stops_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Races Pit Stops',
            },
        ),
        migrations.CreateModel(
            name='races_free_practice4_results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('driverNumber', models.IntegerField()),
                ('time', models.DurationField()),
                ('timeMillis', models.IntegerField()),
                ('gap', models.DurationField(blank=True, null=True)),
                ('gapMillis', models.IntegerField(blank=True, null=True)),
                ('interval', models.DurationField(blank=True, null=True)),
                ('intervalMillis', models.IntegerField(blank=True, null=True)),
                ('laps', models.IntegerField()),
                ('constructorsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice4_results_constructorsID', to='f1_races.constructors')),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice4_results_driverID', to='f1_races.drivers')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice4_results_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice4_results', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_free_practice4_results', to='f1_races.sessions')),
                ('tyreManufacturersID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice4_results_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Races Free Practice 4 Results',
            },
        ),
        migrations.CreateModel(
            name='races_free_practice3_results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('driverNumber', models.IntegerField()),
                ('time', models.DurationField()),
                ('timeMillis', models.IntegerField()),
                ('gap', models.DurationField(blank=True, null=True)),
                ('gapMillis', models.IntegerField(blank=True, null=True)),
                ('interval', models.DurationField(blank=True, null=True)),
                ('intervalMillis', models.IntegerField(blank=True, null=True)),
                ('laps', models.IntegerField()),
                ('constructorsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice3_results_constructorsID', to='f1_races.constructors')),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice3_results_driverID', to='f1_races.drivers')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice3_results_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice3_results', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_free_practice3_results', to='f1_races.sessions')),
                ('tyreManufacturersID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice3_results_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Races Free Practice 3 Results',
            },
        ),
        migrations.CreateModel(
            name='races_free_practice2_results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('driverNumber', models.IntegerField()),
                ('time', models.DurationField()),
                ('timeMillis', models.IntegerField()),
                ('gap', models.DurationField(blank=True, null=True)),
                ('gapMillis', models.IntegerField(blank=True, null=True)),
                ('interval', models.DurationField(blank=True, null=True)),
                ('intervalMillis', models.IntegerField(blank=True, null=True)),
                ('laps', models.IntegerField()),
                ('constructorsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice2_results_constructorsID', to='f1_races.constructors')),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice2_results_driverID', to='f1_races.drivers')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice2_results_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice2_results', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_free_practice2_results', to='f1_races.sessions')),
                ('tyreManufacturersID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice2_results_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Races Free Practice 2 Results',
            },
        ),
        migrations.CreateModel(
            name='races_free_practice1_results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('driverNumber', models.IntegerField()),
                ('time', models.DurationField()),
                ('timeMillis', models.IntegerField()),
                ('gap', models.DurationField(blank=True, null=True)),
                ('gapMillis', models.IntegerField(blank=True, null=True)),
                ('interval', models.DurationField(blank=True, null=True)),
                ('intervalMillis', models.IntegerField(blank=True, null=True)),
                ('laps', models.IntegerField()),
                ('constructorsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice1_results_constructorsID', to='f1_races.constructors')),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice1_results_driverID', to='f1_races.drivers')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice1_results_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice1_results', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_free_practice1_results', to='f1_races.sessions')),
                ('tyreManufacturersID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_free_practice1_results_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Races Free Practice 1 Results',
            },
        ),
        migrations.CreateModel(
            name='races_fastest_laps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('positionDisplayOrder', models.IntegerField()),
                ('positionNumber', models.IntegerField()),
                ('positionText', models.CharField(max_length=100)),
                ('driverNumber', models.IntegerField()),
                ('lap', models.IntegerField()),
                ('time', models.DurationField()),
                ('timeMillis', models.IntegerField()),
                ('gap', models.DurationField(blank=True, null=True)),
                ('gapMillis', models.IntegerField(blank=True, null=True)),
                ('interval', models.DurationField(blank=True, null=True)),
                ('intervalMillis', models.IntegerField(blank=True, null=True)),
                ('constructorsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_fastest_laps_constructorsID', to='f1_races.constructors')),
                ('driverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_fastest_laps_driverID', to='f1_races.drivers')),
                ('engineManufacturerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_fastest_laps_engineManufacturerID', to='f1_races.enginesmanufacturers')),
                ('raceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_fastest_laps', to='f1_races.races')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_races_fastest_laps', to='f1_races.sessions')),
                ('tyreManufacturersID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races_fastest_laps_tyresManufacturerID', to='f1_races.tyremanufacturers')),
            ],
            options={
                'verbose_name': 'Races Fastest Laps',
            },
        ),
    ]
